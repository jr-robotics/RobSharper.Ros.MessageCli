image: mcr.microsoft.com/dotnet/sdk:3.1

stages:
  - test
  - pack
  - integration-test
  - deploy


test cli:
  stage: test
  before_script:
    - 'dotnet tool install dotnet-reportgenerator-globaltool --tool-path dotnet-tools'
  script:
    - 'cd RobSharper.Ros.MessageCli.Tests'
    - 'dotnet test --logger junit /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/'
    - '../dotnet-tools/reportgenerator -reports:TestResults/coverage.cobertura.xml -targetdir:TestResults/coverage-report -reporttypes:Html'
  coverage: '/Total\s+\|\s+(\d{0,2}\.\d{1,2}%)/'
  artifacts:
    paths:
      - 'RobSharper.Ros.MessageCli.Tests/TestResults/'
    reports:
      junit: 'RobSharper.Ros.MessageCli.Tests/TestResults/TestResults.xml'
      cobertura: 'RobSharper.Ros.MessageCli.Tests/TestResults/coverage.cobertura.xml'
  tags:
    - docker-executor


# Create a versioned NuGet package
# This task is only executed for the branches develop and master as well as version tags
.nuget-pack:
  stage: pack
  script:
    - 'export X_CI_VERSION=$(git describe | cut -c 2-)'
    - 'echo .Net version: $(dotnet --version)'
    - 'echo Packing version $X_CI_VERSION $X_BUILD_VERSION'
    - 'cd RobSharper.Ros.MessageCli'
    - 'dotnet pack -c Release -o ../nuget/$X_BUILD_VERSION $X_FRAMEWORK_COMPILER_FLAG -p:Version=$X_CI_VERSION -p:SymbolPackageFormat=snupkg --include-symbols'
  artifacts:
    paths:
      - 'nuget'
  tags:
    - docker-executor

pack LATEST:
  extends: .nuget-pack
  image: mcr.microsoft.com/dotnet/sdk:5.0
  variables:
    X_BUILD_VERSION: 'latest'
    X_FRAMEWORK_COMPILER_FLAG: '-p:FrameworkLatest=True'

pack PREVIEW:
  extends: .nuget-pack
  image: mcr.microsoft.com/dotnet/sdk:6.0
  variables:
    X_BUILD_VERSION: 'preview'
    X_FRAMEWORK_COMPILER_FLAG: '-p:FrameworkPreview=True'
  

# Test package generation with built nuget global tool
.generate_msgs:
  stage: integration-test
  tags:
    - docker-executor
  script:
    - 'export X_CI_VERSION=$(git describe | cut -c 2-)'
    - 'export PATH="$PATH:/root/.dotnet/tools"'
    - 'echo Generating .Net messages for ROS packages'
    - 'echo RobSharper.Ros.MessageCli version: $X_CI_VERSION'
    - 'echo .Net version: $(dotnet --version)'
    - 'dotnet tool install --add-source ./nuget/$X_BUILD_VERSION -g RobSharper.Ros.MessageCli --version $X_CI_VERSION'
    - 'dotnet rosmsg config-feeds add "Robotics BaGet" https://robotics-baget.joanneum.at/v3/index.json 3'
    - 'dotnet rosmsg config-feeds'
    - 'dotnet rosmsg build ./RobSharper.Ros.MessageCli.Tests/TestPackages/valid ./ros-messages-nuget/$X_TFM --nupkg --namespace $X_NAMESPACE --codegenerator $X_CODEGENERATOR'
  artifacts:
    paths:
      - ros-messages-nuget
    expire_in: 1 week

test ROS.Net netcoreapp2.1:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:2.1
  variables: 
    X_NAMESPACE: 'Uml.Robotics.Ros.Messages'
    X_CODEGENERATOR: 'rosnet'
    X_TFM: 'netcoreapp2.1'
    X_BUILD_VERSION: 'latest'

test ROS.Net netcoreapp3.1:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:3.1
  variables:
    X_NAMESPACE: 'Uml.Robotics.Ros.Messages'
    X_CODEGENERATOR: 'rosnet'
    X_TFM: 'netcoreapp3.1'
    X_BUILD_VERSION: 'latest'

test ROS.Net net5.0:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:5.0
  variables:
    X_NAMESPACE: 'Uml.Robotics.Ros.Messages'
    X_CODEGENERATOR: 'rosnet'
    X_TFM: 'net5.0'
    X_BUILD_VERSION: 'latest'

test ROS.Net net6.0:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:6.0
  variables:
    X_NAMESPACE: 'Uml.Robotics.Ros.Messages'
    X_CODEGENERATOR: 'rosnet'
    X_TFM: 'net6.0'
    X_BUILD_VERSION: 'preview'


test RobSharper netcoreapp2.1:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:2.1
  variables:
    X_NAMESPACE: 'RobSharper.Ros.Messages'
    X_CODEGENERATOR: 'robsharper'
    X_TFM: 'netcoreapp2.1'
    X_BUILD_VERSION: 'latest'

test RobSharper netcoreapp3.1:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:3.1
  variables:
    X_NAMESPACE: 'RobSharper.Ros.Messages'
    X_CODEGENERATOR: 'robsharper'
    X_TFM: 'netcoreapp3.1'
    X_BUILD_VERSION: 'latest'

test RobSharper net5.0:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:5.0
  variables:
    X_NAMESPACE: 'RobSharper.Ros.Messages'
    X_CODEGENERATOR: 'robsharper'
    X_TFM: 'net5.0'
    X_BUILD_VERSION: 'latest'

test RobSharper net6.0:
  extends: .generate_msgs
  image: mcr.microsoft.com/dotnet/sdk:6.0
  variables:
    X_NAMESPACE: 'RobSharper.Ros.Messages'
    X_CODEGENERATOR: 'robsharper'
    X_TFM: 'net6.0'
    X_BUILD_VERSION: 'preview'


# Deploy to JR BaGet server
# This is done for all pushes of version tags (v*) automatically
# Pushes to the master branch and web pipeline triggers must be deployed manually
.baget_base:
  stage: deploy
  only:
    - develop
    - master
    - /^v.*$/
  environment:
    name: JR BaGet
    url: https://robotics-baget.joanneum.at/
  script:
    - 'cd nuget/latest'
    - 'dotnet nuget push *.nupkg -s https://robotics-baget.joanneum.at/v3/index.json -k $JR_BAGET_API_KEY'
  tags:
    - docker-executor

baget auto:
  extends: .baget_base
  only:
    - /^v.*$/
  except:
    - web
    - schedules

baget manual:
  extends: .baget_base
  except:
    - /^v.*$/
  when: manual


# Deploy to NuGet.org
# This task has to be triggered manually
#nuget.org:
#  stage: deploy
#  dependencies:
#    - nuget-pack
#  environment:
#    name: NuGet.org
#    url: https://www.nuget.org/
#  only:
#    - master
#    - /^v.*$/
#  script:
#    - 'cd nuget/latest'
#    - 'dotnet nuget push *.nupkg -s https://api.nuget.org/v3/index.json -k $NUGET_ORG_API_KEY'
#  tags:
#    - docker-executor
#  when: manual
