using RobSharper.Ros.MessageEssentials;

namespace {{Package.Namespace}}
{
{{#if MessageType.IsMessage}}
    [RosMessage("{{Package.RosName}}/{{RosTypeName}}")]
{{/if}}
{{#if MessageType.IsServiceRequest}}
    [RosServiceMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ServiceMessageKind.Request)]
{{/if}}
{{#if MessageType.IsServiceResponse}}
    [RosServiceMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ServiceMessageKind.Response)]
{{/if}}
{{#if MessageType.IsActionGoal}}
    [RosMessage("{{Package.RosName}}/{{RosTypeName}}")]
{{/if}}
{{#if MessageType.IsActionResult}}
    [RosMessage("{{Package.RosName}}/{{RosTypeName}}")]
{{/if}}
{{#if MessageType.IsActionFeedback}}
    [RosMessage("{{Package.RosName}}/{{RosTypeName}}")]
{{/if}}
    public class {{TypeName}}
    {
    {{#each Constants}}
        [RosMessageField("{{RosType}}", "{{RosIdentifier}}", {{Index}})]
        public const {{TypeName}} {{Identifier}} = {{formatValue Value}};
    
    {{/each}}
    {{#each Fields}}
        [RosMessageField("{{RosType}}", "{{RosIdentifier}}", {{Index}})]
        public {{{Type.InterfaceName}}} {{Identifier}} { get; set; } {{~#unless Type.IsBuiltInType}} = new {{{Type.ConcreteName}}}();{{/unless}}
    
    {{/each}}
    }
}