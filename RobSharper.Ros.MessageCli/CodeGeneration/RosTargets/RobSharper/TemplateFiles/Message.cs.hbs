using RobSharper.Ros.MessageEssentials;

namespace {{Package.Namespace}}
{
{{#if MessageType.IsMessage}}
    [RosMessage("{{Package.RosName}}/{{RosTypeName}}")]
{{/if}}
{{#if MessageType.IsServiceRequest}}
    [RosServiceMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ServiceMessageKind.Request)]
{{/if}}
{{#if MessageType.IsServiceResponse}}
    [RosServiceMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ServiceMessageKind.Response)]
{{/if}}
{{#if MessageType.IsActionGoal}}
    [RosActionMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ActionMessageKind.Goal)]
{{/if}}
{{#if MessageType.IsActionResult}}
    [RosActionMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ActionMessageKind.Result)]
{{/if}}
{{#if MessageType.IsActionFeedback}}
    [RosActionMessage("{{Package.RosName}}/{{RosAbstractTypeName}}", ActionMessageKind.Feedback)]
{{/if}}
    public class {{TypeName}}
    {
    {{#each Constants}}
        [RosMessageField("{{RosType}}", "{{RosIdentifier}}", {{Index}})]
        public const {{TypeName}} {{Identifier}} = {{formatValue Value}};
    
    {{/each}}
    {{#each Fields}}
        {{#if Type.IsString}}
        private string _{{Identifier}} = string.Empty;
        
        [RosMessageField("{{RosType}}", "{{RosIdentifier}}", {{Index}})]
        public string {{Identifier}}
        {
            get { return _{{Identifier}}; }
            set {
                if (value == null)
                    throw new System.ArgumentNullException(nameof(value), "Value must not be null");
                
                _{{Identifier}} = value;
            }
        }
        {{else if Type.IsDateTimeOrTimeSpan}}
        [RosMessageField("{{RosType}}", "{{RosIdentifier}}", {{Index}})]
        public {{{Type.InterfaceName}}} {{Identifier}} { get; set; } = RosTime.Zero;
        {{else}}
        [RosMessageField("{{RosType}}", "{{RosIdentifier}}", {{Index}})]
        public {{{Type.InterfaceName}}} {{Identifier}} { get; set; } {{~#unless Type.IsBuiltInType}} = new {{{Type.ConcreteName}}}();{{/unless}}
        {{/if}}
    
    {{/each}}
    }
}